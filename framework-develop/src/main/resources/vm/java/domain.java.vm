package ${packageName}.domain;

    #if($table.crud)
        #set($Entity="BaseEntity")
    #elseif($table.data || $table.sub)
        #set($Entity="DataEntity")
    #elseif($table.tree)
        #set($Entity="TreeEntity")
    #end
    #foreach ($import in $importList)
    import ${import};
    #end
import cn.silver.framework.common.annotation.Excel;
import cn.silver.framework.core.annotation.Column;
import cn.silver.framework.core.constant.SearchType;
    $Entity;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;

import javax.persistence.Table;
import javax.validation.constraints.NotBlank;
/**
 * ${functionName}对象 ${tableName}
 *
 * @author ${author}
 * @date ${datetime}
 */

@Data
@Table(name = "${tableName}")
@ApiModel(value = "${ClassName}", description = "${ClassName}对象")
public class ${ClassName} extends $Entity{

private static final long serialVersionUID=1L;
#foreach ($column in $columns)
    #if(!$table.isSuperColumn($column.javaField))
    /** $column.columnComment */
        #if($column.list)
            #set($parentheseIndex=$column.columnComment.indexOf("（"))
            #if($parentheseIndex != -1)
                #set($comment=$column.columnComment.substring(0, $parentheseIndex))
            #else
                #set($comment=$column.columnComment)
            #end
            #if($parentheseIndex != -1)
            @Excel(name = "${comment}", sort = ${column.sort}, readConverterExp = "$column.readConverterExp()")
            #elseif($column.javaType == 'Date')
            @JsonFormat(pattern = "yyyy-MM-dd")
            @Excel(name = "${comment}", sort = ${column.sort}, width = 30, dateFormat = "yyyy-MM-dd")
            #else
            @Excel(name = "${comment}", sort = ${column.sort})
            #end
            #if($column.isRequired)
            @NotBlank("${comment}不能为空")
            #end
            #if($column.isQuery)
            @Column(name = "${column.columnName}", searchType = SearchType.$column.queryType)
            #end
        #end
    @ApiModelProperty(value = "$column.columnComment")
    private $column.javaType $column.javaField;

    #end
#end
#if($table.sub)
/** $table.subTable.functionName信息 */
private List<${subClassName}> ${subclassName}List;

#end

@Override
public String toString(){
        return new ToStringBuilder(this,ToStringStyle.MULTI_LINE_STYLE)
    #foreach ($column in $columns)
        #if($column.javaField.length() > 2 && $column.javaField.substring(1,2).matches("[A-Z]"))
            #set($AttrName=$column.javaField)
        #else
            #set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
        #end
            .append("${column.javaField}",get${AttrName}())
    #end
    #if($table.sub)
            .append("${subclassName}List",get${subClassName}List())
    #end
        .toString();
        }
        }
