<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.silver.framework.system.mapper.SysDeptMapper">

    <resultMap type="cn.silver.framework.system.domain.SysDept" id="SysDeptResult">
        <id property="id" column="id" javaType="String" jdbcType="VARCHAR"/>
        <result property="pid" column="pid" javaType="String" jdbcType="VARCHAR"/>
        <result property="ancestors" column="ancestors"/>
        <result property="deptName" column="dept_name"/>
        <result property="orderNum" column="order_num"/>
        <result property="leader" column="leader"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="status" column="status"/>
        <result property="deleted" column="deleted"/>
        <result property="parentName" column="parent_name"/>
        <result property="createBy" column="create_by"/>
        <result property="createName" column="create_name"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateName" column="update_name"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="selectDeptVo">
        select d.id,
               d.PID,
               d.ancestors,
               d.dept_name,
               d.order_num,
               d.leader,
               d.phone,
               d.email,
               d.status,
               d.deleted,
               d.create_by,
               d.create_name,
               d.create_time,
               d.update_by,
               d.update_name,
               d.update_time
        from sys_dept d
    </sql>

    <select id="selectDeptList" parameterType="cn.silver.framework.system.domain.SysDept" resultMap="SysDeptResult">
        <include refid="selectDeptVo"/>
        where d.deleted = '0'
        <if test="id != null and id != 0">
            AND id = #{id}
        </if>
        <if test="pid != null and pid != 0">
            AND pid = #{pid}
        </if>
        <if test="deptName != null and deptName != ''">
            AND dept_name like concat(concat('%', #{deptName}), '%')
        </if>
        <if test="status != null and status != ''">
            AND status = #{status}
        </if>
        <!-- 数据范围过滤 -->
        ${params.dataScope}
        order by d.pid, d.order_num
    </select>

    <select id="selectDeptListByRoleId" resultType="java.lang.String">
        select d.id
        from sys_dept d
        left join sys_role_dept rd on d.id = rd.dept_id
        where rd.role_id = #{roleId}
        <if test="deptCheckStrictly">
            and d.id not in (select d.PID from sys_dept d inner join sys_role_dept rd on d.id =
            rd.dept_id and rd.role_id = #{roleId})
        </if>
        order by d.PID, d.order_num
    </select>

    <select id="selectDeptById" parameterType="java.lang.String" resultMap="SysDeptResult">
        <include refid="selectDeptVo"/>
        where id = #{id}
    </select>

    <select id="checkDeptExistUser" parameterType="java.lang.String" resultType="int">
        select count(1)
        from sys_user
        where id = #{id}
          and deleted = '0'
    </select>

    <!--    <select id="hasChildByid" parameterType="java.lang.String" resultType="int">
            select count(1)
            from sys_dept
            where deleted = '0'
              and pid = #{id}
        </select>-->

    <select id="selectChildrenDeptById" parameterType="java.lang.String" resultMap="SysDeptResult">
        select *
        from sys_dept
        where find_in_set(#{id}, ancestors) <![CDATA[ <> ]]> 0
    </select>

    <select id="selectNormalChildrenDeptById" parameterType="java.lang.String" resultType="int">
        select count(*)
        from sys_dept
        where status = 0
          and deleted = '0'
          and find_in_set(#{id}, ancestors) <![CDATA[ <> ]]> 0
    </select>

    <select id="checkDeptNameUnique" resultMap="SysDeptResult">
        <include refid="selectDeptVo"/>
        where dept_name=#{deptName} and pid = #{pid}
    </select>
    <select id="hasChildByDeptId" resultType="java.lang.Integer" parameterType="java.lang.String">
        select count(1)
        from SYS_DEPT sd
        where sd.PID = #{deptId}
    </select>

    <insert id="insertDept" parameterType="cn.silver.framework.system.domain.SysDept">
        insert into sys_dept(
        id,
        <if test="pid != null and pid != 0">pid,</if>
        <if test="deptName != null and deptName != ''">dept_name,</if>
        <if test="ancestors != null and ancestors != ''">ancestors,</if>
        <if test="orderNum != null and orderNum != ''">order_num,</if>
        <if test="leader != null and leader != ''">leader,</if>
        <if test="phone != null and phone != ''">phone,</if>
        <if test="email != null and email != ''">email,</if>
        <if test="status != null">status,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        <if test="createName != null and createName != ''">create_name,</if>
        <if test="updateBy != null and updateBy != ''">update_by,</if>
        <if test="updateName != null and updateName != ''">update_name,</if>
        create_time,update_time
        )values(
        #{id},
        <if test="pid != null and pid != 0">#{pid},</if>
        <if test="deptName != null and deptName != ''">#{deptName},</if>
        <if test="ancestors != null and ancestors != ''">#{ancestors},</if>
        <if test="orderNum != null and orderNum != ''">#{orderNum},</if>
        <if test="leader != null and leader != ''">#{leader},</if>
        <if test="phone != null and phone != ''">#{phone},</if>
        <if test="email != null and email != ''">#{email},</if>
        <if test="status != null">#{status},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        <if test="createName != null and createName != ''">#{createName},</if>
        <if test="updateBy != null and updateBy != ''">#{updateBy},</if>
        <if test="updateName != null and updateName != ''">#{updateName},</if>
        sysdate,sysdate
        )
    </insert>

    <update id="updateDept" parameterType="cn.silver.framework.system.domain.SysDept">
        update sys_dept
        <set>
            <if test="pid != null and pid != 0">pid = #{pid},</if>
            <if test="deptName != null and deptName != ''">dept_name = #{deptName},</if>
            <if test="ancestors != null and ancestors != ''">ancestors = #{ancestors},</if>
            <if test="orderNum != null and orderNum != ''">order_num = #{orderNum},</if>
            <if test="leader != null">leader = #{leader},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="email != null">email = #{email},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            <if test="updateName != null and updateName != ''">update_name = #{updateName},</if>
            update_time = sysdate
        </set>
        where id = #{id}
    </update>

    <update id="updateDeptChildren" parameterType="java.util.List">
        update sys_dept set ancestors =
        <foreach collection="depts" item="item" index="index"
                 separator=" " open="case id" close="end">
            when #{item.id} then #{item.ancestors}
        </foreach>
        where id in
        <foreach collection="depts" item="item" index="index"
                 separator="," open="(" close=")">
            #{item.id}
        </foreach>
    </update>

    <update id="updateDeptStatusNormal" parameterType="java.lang.String">
        update sys_dept set status = '0' where id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <delete id="deleteDeptById" parameterType="java.lang.String">
        update sys_dept
        set deleted = '2'
        where id = #{id}
    </delete>

</mapper>
