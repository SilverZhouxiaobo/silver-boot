<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.silver.framework.workflow.mapper.FlowMessageMapper">
    <resultMap id="BaseResultMap" type="cn.silver.framework.workflow.domain.FlowMessage">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="message_type" jdbcType="VARCHAR" property="messageType"/>
        <result column="message_content" jdbcType="VARCHAR" property="messageContent"/>
        <result column="remind_count" jdbcType="INTEGER" property="remindCount"/>
        <result column="work_order_id" jdbcType="VARCHAR" property="workOrderId"/>
        <result column="process_definition_id" jdbcType="VARCHAR" property="processDefinitionId"/>
        <result column="process_definition_key" jdbcType="VARCHAR" property="processDefinitionKey"/>
        <result column="process_definition_name" jdbcType="VARCHAR" property="processDefinitionName"/>
        <result column="process_instance_id" jdbcType="VARCHAR" property="processInstanceId"/>
        <result column="process_instance_initiator" jdbcType="VARCHAR" property="processInstanceInitiator"/>
        <result column="task_id" jdbcType="VARCHAR" property="taskId"/>
        <result column="task_definition_key" jdbcType="VARCHAR" property="taskDefinitionKey"/>
        <result column="task_name" jdbcType="VARCHAR" property="taskName"/>
        <result column="task_start_time" jdbcType="TIMESTAMP" property="taskStartTime"/>
        <result column="task_assignee" jdbcType="VARCHAR" property="taskAssignee"/>
        <result column="task_finished" jdbcType="BOOLEAN" property="taskFinished"/>
        <result column="business_data_shot" jdbcType="CLOB" property="businessDataShot"/>
        <result column="online_form_data" jdbcType="BOOLEAN" property="onlineFormData"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_name" jdbcType="VARCHAR" property="createName"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_name" jdbcType="VARCHAR" property="updateName"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="deleted" jdbcType="VARCHAR" property="deleted"/>
    </resultMap>

    <select id="selecctListByUser" resultMap="BaseResultMap">
        SELECT a.* FROM flow_message a
        <where>
            <if test="messageType != null and messageType != ''">
                and a.message_type = #{messageType}
            </if>
            AND (a.task_assignee = #{loginName} OR EXISTS (SELECT * FROM flow_message_candicate b
            WHERE a.message_id = b.message_id AND b.candidate_id in
            <foreach collection="groupIdSet" index="index" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>))
        </where>
        ORDER BY a.update_time DESC
    </select>

    <select id="getRemindingMessageListByUser" resultMap="BaseResultMap">
        SELECT a.* FROM flow_message a
        <where>
            a.task_finished = false
            AND a.message_type = 0
            AND (a.task_assignee = #{loginName} OR EXISTS (SELECT * FROM flow_message_candicate b
            WHERE a.message_id = b.message_id AND b.candidate_id in
            <foreach collection="groupIdSet" index="index" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>))
        </where>
        ORDER BY a.update_time DESC
    </select>

    <select id="getCopyMessageListByUser" resultMap="BaseResultMap">
        SELECT a.* FROM flow_message a
        <where>
            a.message_type = 1
            AND EXISTS (SELECT * FROM flow_message_candicate b
            WHERE a.message_id = b.message_id AND b.candidate_id in
            <foreach collection="groupIdSet" index="index" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>)
            <if test="!read">
                AND NOT EXISTS (SELECT * FROM flow_message_operation c
                WHERE a.message_id = c.message_id AND c.login_name = #{loginName})
            </if>
            <if test="read">
                AND EXISTS (SELECT * FROM flow_message_operation c
                WHERE a.message_id = c.message_id AND c.login_name = #{loginName})
            </if>
        </where>
        ORDER BY a.update_time DESC
    </select>

    <select id="countRemindingMessageListByUser" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM flow_message a
        <where>
            a.task_finished = false
            AND a.message_type = 0
            AND (a.task_assignee = #{loginName} OR EXISTS (SELECT * FROM flow_message_candicate b
            WHERE a.message_id = b.message_id AND b.candidate_id in
            <foreach collection="groupIdSet" index="index" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>))
        </where>
    </select>

    <select id="countCopyMessageListByUser" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM flow_message a
        <where>
            a.message_type = 1
            AND EXISTS (SELECT * FROM flow_message_candicate b
            WHERE a.message_id = b.message_id AND b.candidate_id in
            <foreach collection="groupIdSet" index="index" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>)
            AND NOT EXISTS (SELECT * FROM flow_message_operation c
            WHERE a.message_id = c.message_id AND c.login_name = #{loginName})
        </where>
    </select>
    <select id="selectListByTaskId" resultMap="BaseResultMap"
            parameterType="java.lang.String">
        select *
        from FLOW_MESSAGE
        where TASK_ID = #{taskId}
    </select>
    <select id="selectListByInstanceId" resultMap="BaseResultMap">
        select *
        from FLOW_MESSAGE
        where PROCESS_INSTANCE_ID = #{instanceId}
    </select>

    <delete id="deleteByInstanceId" parameterType="java.lang.String">
        delete
        from FLOW_MESSAGE
        where PROCESS_INSTANCE_ID = #{instanceId}
    </delete>
</mapper>
